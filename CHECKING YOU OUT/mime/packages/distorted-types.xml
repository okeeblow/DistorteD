<?xml version="1.0" encoding="UTF-8"?>
<!--
  This file contains supplementary media-type information compiled for DistorteD
  and falls under the same license as the rest of the DistorteD project,
  unlike the APL-2.0 license of the bundled `tika-mimetypes.xml`.

  I will conform to fd.o's `type`-attribute naming scheme for `<magic>` elements when giving types to my `<fourcc>`s.
  https://specifications.freedesktop.org/shared-mime-info-spec/shared-mime-info-spec-latest.html#idm45094479632208
  https://gitlab.freedesktop.org/xdg/shared-mime-info/-/blob/master/data/freedesktop.org.xml.in

  The upstream `<magic>` `type`s can be any of:
    `string`, `host16`, `host32`, `big16`, `big32`, `little16`, `little32` or `byte`. 

  The terms `host`, `big`, and `little` there refer to the endianness (byte-order) of their datum.
  Since FourCC comes from the Apple Macintosh OSType they will almost always be big-endian like the Motorola 68000.

  For example, the FourCC of MPEG Layer-3 audio with unprintable NULL byte.
  I will store the UTF-8 String equivalent to minimize re-encoding at DD startup.
    irb> [0x6D, 0x73, 0x00, 0x55]
    => [109, 115, 0, 85]
    irb> [0x6D, 0x73, 0x00, 0x55].pack('c*>')
    => "ms\x00U"
    irb> "ms\x00U".unpack('c*>')
    => [109, 115, 0, 85]
    irb(main):054:0> [0x6D, 0x73, 0x00, 0x55].pack('c*>').encoding
    => #<Encoding:ASCII-8BIT>
    irb(main):055:0> [0x6D, 0x73, 0x00, 0x55].pack('c*>').encode(Encoding::UTF_8)
    => "ms\u0000U"
    irb> [0x6D, 0x73, 0x00, 0x55].pack('c*>').encode(Encoding::UTF_8).unpack('c*>')
    => [109, 115, 0, 85]

-->
<!--
  # Data sources

  ## FourCC

  https://filesignatures.net/index.php?page=all
  http://mp4ra.org/
  https://developer.apple.com/library/archive/documentation/QuickTime/QTFF/QTFFChap3/qtff3.html

-->
<mime-info>
  <mime-type type="audio/mpeg">
    <distorted:link>https://tools.ietf.org/html/rfc3003</distorted:link>
    <distorted:fourcc type="big32" value="ms\u0000U"/>
  </mime-type>
  <mime-type type="text/plain">
    <magic priority="33">
      <!--
        There must be a reason fd.o and Tika both don't identify these.
        I haven't found a conflict yet but this seems too simultaneously
        important and basic to overlook unintentionally  v(._. )v

        https://www.unicode.org/faq/utf_bom.html
        https://en.wikipedia.org/wiki/Byte_order_mark
        https://docs.microsoft.com/en-us/windows/win32/intl/using-byte-order-marks
      -->
      <match type="host16" value="0xFFFE" offset="0"/>      <!-- UTF-16 -->
      <match type="host32" value="0xFFFE0000" offset="0"/>  <!-- UTF-32 -->
      <match type="byte" value="0xEF" offset="0">
        <match type="byte" value="0xBB" offset="1">
          <match type="byte" value="0xBF" offset="2"/>      <!-- UTF-8  -->
        </match>
      </match>
    </magic>
  </mime-type>
</mime-info>
